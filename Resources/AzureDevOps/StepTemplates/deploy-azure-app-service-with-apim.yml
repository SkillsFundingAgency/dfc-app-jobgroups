parameters:
  AzureSubscription: ''
  DfCDevopsPath: ''
  WebAppName: ''
  ResourceGroup: ''
  PackageFile: ''
  SharedResourceGroupName: ''
  ApimServiceName: ''
  ApimProductInstanceName: ''
  ApiName: ''
  ApiId: ''
  APIMPolicyPath: ''
  ApimImportScript: ''
  SpecificationPath: ''
  UIFunctionalTestPackageJobGroups: ''
  UIFunctionalTestProjectFolderJobGroups: ''
  UIFunctionalTestCategoryJobGroups: ''

steps:
- checkout: dfc-devops
  path: 's/dfc-devops/'

- task: AzureAppServiceManage@0
  displayName: 'Start Azure App Service:${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    Action: 'Start Azure App Service'
    WebAppName: '${{ parameters.WebAppName }}'
    SpecifySlotOrASE: true
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    Slot: staging

- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy: ${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    WebAppName: '${{ parameters.WebAppName }}'
    PackageForLinux: "${{ parameters.PackageFile }}"
    deployToSlotOrASE: true
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    SlotName: staging

- task: AzurePowerShell@4
  displayName: 'Perform smoke test'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    ScriptPath: '${{ parameters.DfCDevopsPath }}/PSCoreScripts/Invoke-SmokeTestOnWebApp.ps1'
    ScriptArguments: |
     -ResourceGroup ${{ parameters.ResourceGroup }} -AppName ${{ parameters.WebAppName }} -Path '/health/ping' -Slot staging -TimeoutInSecs 20 -Verbose
     
    FailOnStandardError: true
    azurePowerShellVersion: LatestVersion

- task: AzureAppServiceManage@0
  displayName: 'Swap Slots: ${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    WebAppName: '${{ parameters.WebAppName }}'
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    SourceSlot: staging

- task: AzureAppServiceManage@0
  displayName: 'Stop Azure App Service Slots: ${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    Action: 'Stop Azure App Service'
    WebAppName: '${{ parameters.WebAppName }}'
    SpecifySlotOrASE: true
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    Slot: staging

- task: esfadevops.Tokenization.custom-build-task.Tokenization@0
  displayName: 'Tokenization: Transform OpenAPI specification'
  inputs:
    SourcePath: '${{ parameters.SpecificationPath }}'
    TargetFileNames: 'WebhookReceiver.txt'
    
- task: AzurePowerShell@4	
  displayName: 'Import OpenAPI specification'	
  inputs:	
    azureSubscription: '${{ parameters.AzureSubscription }}'	
    ScriptPath: '${{ parameters.ApimImportScript }}'	
    ScriptArguments: "-ApimResourceGroup '${{ parameters.SharedResourceGroupName }}' -InstanceName '${{ parameters.ApimServiceName }}' -ApiName '${{ parameters.ApimProductInstanceName }}-${{ parameters.ApiName }}' -OpenApiSpecificationFile '${{ parameters.SpecificationPath }}/WebhookReceiver.txt' -ApiPath '${{ parameters.ApimProductInstanceName }}/${{ parameters.ApiName }}'"	
    azurePowerShellVersion: LatestVersion

- task: esfadevops.Tokenization.custom-build-task.Tokenization@0
  displayName: 'Tokenization: Transform file APIM Policy File'
  inputs:
    SourcePath: '${{ parameters.APIMPolicyPath }}'
    TargetFileNames: 'ApimPolicy-IsolatedAppServiceAsEventGridWebhookEndpoint.xml'

- task: AzurePowerShell@5
  displayName: 'Apply EventGrid APIM Policy'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    ScriptPath: '$(Agent.BuildDirectory)/s/dfc-devops/PSCoreScripts/Set-ApimPolicy.ps1'
    ScriptArguments: '-PolicyScope operation -ApimResourceGroup ${{ parameters.SharedResourceGroupName }} -ApimServiceName ${{ parameters.ApimServiceName }} -PolicyFilePath "$(Agent.BuildDirectory)/dfc.app.jobgroups.apimpolicies/ApimPolicy-IsolatedAppServiceAsEventGridWebhookEndpoint.xml" -ApiId ${{ parameters.ApiId }} -OperationId post-api-webhook-receiveevents'
    azurePowerShellVersion: LatestVersion

- task: ExtractFiles@1
  displayName: Extract files
  inputs:
    archiveFilePatterns: '${{ parameters.UIFunctionalTestPackageJobGroups }}'
    destinationFolder: '${{ parameters.UIFunctionalTestProjectFolderJobGroups }}'

- powershell: |
   Copy-Item -Path $(Pipeline.Workspace)/DFC.APP.JobGroups.UI.FunctionalTests/appsettings.template.json -Destination $(Pipeline.Workspace)/DFC.APP.JobGroups.UI.FunctionalTests/appsettings.json
  displayName: 'Copy and convert appsettings.template.json to appsettings.json'

- task: esfadevops.Tokenization.custom-build-task.Tokenization@0
  displayName: 'Tokenization: Transform file appsettings.json'
  inputs:
    SourcePath: '${{ parameters.UIFunctionalTestProjectFolderJobGroups }}'
    TargetFileNames: appsettings.json

- task: esfadevops.Tokenization.custom-build-task.Tokenization@0
  displayName: 'Tokenization: Transform file appsettings.json'
  inputs:
    SourcePath: '${{ parameters.UIFunctionalTestProjectFolderJobGroups }}'
    TargetFileNames: appsettings.json

- task: VSTest@2
  displayName: 'VsTest - testAssemblies  (dfc-api-ui-functionaltests-jobgroups)'
  inputs:
    testAssemblyVer2: |
     **\*Tests.dll
     !**\*TestAdapter.dll
     !**\obj\**
    searchFolder: '${{ parameters.UIFunctionalTestProjectFolderJobGroups }}'
    testFiltercriteria: 'Category=${{ parameters.UIFunctionalTestCategoryJobGroups }}'
    otherConsoleOptions: '/Framework:.NETCoreApp,Version=v3.1'
  continueOnError: true

- task: DeleteFiles@1
  displayName: 'Delete appsettings.json'
  inputs:
    SourceFolder: '${{ parameters.UIFunctionalTestProjectFolderJobGroups }}'
    Contents: appsettings.json
  condition: always()
